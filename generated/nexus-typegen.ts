/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddDoneDataInput: {
    // input type
    description: string; // String!
    title: string; // String!
    userId: string; // String!
  };
  AddInProgressDataInput: {
    // input type
    description: string; // String!
    title: string; // String!
    userId: string; // String!
  };
  AddTodoDataInput: {
    // input type
    description: string; // String!
    title: string; // String!
    userId: string; // String!
  };
  ChangePasswordInput: {
    // input type
    currentPassword: string; // String!
    id: string; // String!
    newPassword: string; // String!
  };
  LoginInput: {
    // input type
    email: string; // String!
    password: string; // String!
  };
  SignupInput: {
    // input type
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    password: string; // String!
  };
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenObjects {
  AddDoneDataResult: {
    // root type
    message: string; // String!
  };
  AddInProgressDataResult: {
    // root type
    message: string; // String!
  };
  AddTodoDataResult: {
    // root type
    message: string; // String!
  };
  ChangePasswordResult: {
    // root type
    message: string; // String!
  };
  DeleteDoneDataByIdResult: {
    // root type
    message: string; // String!
  };
  DeleteInProgressDataByIdResult: {
    // root type
    message: string; // String!
  };
  DeleteTodoDataByIdResult: {
    // root type
    message: string; // String!
  };
  Done: {
    // root type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  GetDoneListResult: {
    // root type
    done: NexusGenRootTypes['Done'][]; // [Done!]!
    message: string; // String!
  };
  GetInProgressListResult: {
    // root type
    inProgress: NexusGenRootTypes['InProgress'][]; // [InProgress!]!
    message: string; // String!
  };
  GetTodoListResult: {
    // root type
    message: string; // String!
    todo: NexusGenRootTypes['Todo'][]; // [Todo!]!
  };
  GetUserDetailsResult: {
    // root type
    message: string; // String!
    userDetails: NexusGenRootTypes['UserDetails']; // UserDetails!
  };
  InProgress: {
    // root type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  LoginResult: {
    // root type
    message: string; // String!
    token?: string | null; // String
    userId?: string | null; // String
  };
  Mutation: {};
  Query: {};
  SignupResult: {
    // root type
    message: string; // String!
  };
  Todo: {
    // root type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  UserDetails: {
    // root type
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    lastName: string; // String!
    updatedAt: string; // String!
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars;

export interface NexusGenFieldTypes {
  AddDoneDataResult: {
    // field return type
    message: string; // String!
  };
  AddInProgressDataResult: {
    // field return type
    message: string; // String!
  };
  AddTodoDataResult: {
    // field return type
    message: string; // String!
  };
  ChangePasswordResult: {
    // field return type
    message: string; // String!
  };
  DeleteDoneDataByIdResult: {
    // field return type
    message: string; // String!
  };
  DeleteInProgressDataByIdResult: {
    // field return type
    message: string; // String!
  };
  DeleteTodoDataByIdResult: {
    // field return type
    message: string; // String!
  };
  Done: {
    // field return type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  GetDoneListResult: {
    // field return type
    done: NexusGenRootTypes['Done'][]; // [Done!]!
    message: string; // String!
  };
  GetInProgressListResult: {
    // field return type
    inProgress: NexusGenRootTypes['InProgress'][]; // [InProgress!]!
    message: string; // String!
  };
  GetTodoListResult: {
    // field return type
    message: string; // String!
    todo: NexusGenRootTypes['Todo'][]; // [Todo!]!
  };
  GetUserDetailsResult: {
    // field return type
    message: string; // String!
    userDetails: NexusGenRootTypes['UserDetails']; // UserDetails!
  };
  InProgress: {
    // field return type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  LoginResult: {
    // field return type
    message: string; // String!
    token: string | null; // String
    userId: string | null; // String
  };
  Mutation: {
    // field return type
    addDoneData: NexusGenRootTypes['AddDoneDataResult']; // AddDoneDataResult!
    addInProgressData: NexusGenRootTypes['AddInProgressDataResult']; // AddInProgressDataResult!
    addTodoData: NexusGenRootTypes['AddTodoDataResult']; // AddTodoDataResult!
    changePassword: NexusGenRootTypes['ChangePasswordResult']; // ChangePasswordResult!
    deleteDoneDataById: NexusGenRootTypes['DeleteDoneDataByIdResult']; // DeleteDoneDataByIdResult!
    deleteInProgressDataById: NexusGenRootTypes['DeleteInProgressDataByIdResult']; // DeleteInProgressDataByIdResult!
    deleteTodoDataById: NexusGenRootTypes['DeleteTodoDataByIdResult']; // DeleteTodoDataByIdResult!
    login: NexusGenRootTypes['LoginResult']; // LoginResult!
    signup: NexusGenRootTypes['SignupResult']; // SignupResult!
  };
  Query: {
    // field return type
    getDoneList: NexusGenRootTypes['GetDoneListResult']; // GetDoneListResult!
    getInProgressList: NexusGenRootTypes['GetInProgressListResult']; // GetInProgressListResult!
    getTodoList: NexusGenRootTypes['GetTodoListResult']; // GetTodoListResult!
    getUserDetails: NexusGenRootTypes['GetUserDetailsResult']; // GetUserDetailsResult!
  };
  SignupResult: {
    // field return type
    message: string; // String!
  };
  Todo: {
    // field return type
    createdAt: string; // String!
    dataType: string; // String!
    description: string; // String!
    id: string; // String!
    title: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  };
  UserDetails: {
    // field return type
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    lastName: string; // String!
    updatedAt: string; // String!
  };
}

export interface NexusGenFieldTypeNames {
  AddDoneDataResult: {
    // field return type name
    message: 'String';
  };
  AddInProgressDataResult: {
    // field return type name
    message: 'String';
  };
  AddTodoDataResult: {
    // field return type name
    message: 'String';
  };
  ChangePasswordResult: {
    // field return type name
    message: 'String';
  };
  DeleteDoneDataByIdResult: {
    // field return type name
    message: 'String';
  };
  DeleteInProgressDataByIdResult: {
    // field return type name
    message: 'String';
  };
  DeleteTodoDataByIdResult: {
    // field return type name
    message: 'String';
  };
  Done: {
    // field return type name
    createdAt: 'String';
    dataType: 'String';
    description: 'String';
    id: 'String';
    title: 'String';
    updatedAt: 'String';
    userId: 'String';
  };
  GetDoneListResult: {
    // field return type name
    done: 'Done';
    message: 'String';
  };
  GetInProgressListResult: {
    // field return type name
    inProgress: 'InProgress';
    message: 'String';
  };
  GetTodoListResult: {
    // field return type name
    message: 'String';
    todo: 'Todo';
  };
  GetUserDetailsResult: {
    // field return type name
    message: 'String';
    userDetails: 'UserDetails';
  };
  InProgress: {
    // field return type name
    createdAt: 'String';
    dataType: 'String';
    description: 'String';
    id: 'String';
    title: 'String';
    updatedAt: 'String';
    userId: 'String';
  };
  LoginResult: {
    // field return type name
    message: 'String';
    token: 'String';
    userId: 'String';
  };
  Mutation: {
    // field return type name
    addDoneData: 'AddDoneDataResult';
    addInProgressData: 'AddInProgressDataResult';
    addTodoData: 'AddTodoDataResult';
    changePassword: 'ChangePasswordResult';
    deleteDoneDataById: 'DeleteDoneDataByIdResult';
    deleteInProgressDataById: 'DeleteInProgressDataByIdResult';
    deleteTodoDataById: 'DeleteTodoDataByIdResult';
    login: 'LoginResult';
    signup: 'SignupResult';
  };
  Query: {
    // field return type name
    getDoneList: 'GetDoneListResult';
    getInProgressList: 'GetInProgressListResult';
    getTodoList: 'GetTodoListResult';
    getUserDetails: 'GetUserDetailsResult';
  };
  SignupResult: {
    // field return type name
    message: 'String';
  };
  Todo: {
    // field return type name
    createdAt: 'String';
    dataType: 'String';
    description: 'String';
    id: 'String';
    title: 'String';
    updatedAt: 'String';
    userId: 'String';
  };
  UserDetails: {
    // field return type name
    createdAt: 'String';
    email: 'String';
    firstName: 'String';
    id: 'String';
    lastName: 'String';
    updatedAt: 'String';
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    addDoneData: {
      // args
      data: NexusGenInputs['AddDoneDataInput']; // AddDoneDataInput!
    };
    addInProgressData: {
      // args
      data: NexusGenInputs['AddInProgressDataInput']; // AddInProgressDataInput!
    };
    addTodoData: {
      // args
      data: NexusGenInputs['AddTodoDataInput']; // AddTodoDataInput!
    };
    changePassword: {
      // args
      data: NexusGenInputs['ChangePasswordInput']; // ChangePasswordInput!
    };
    deleteDoneDataById: {
      // args
      id: string; // String!
    };
    deleteInProgressDataById: {
      // args
      id: string; // String!
    };
    deleteTodoDataById: {
      // args
      id: string; // String!
    };
    login: {
      // args
      data: NexusGenInputs['LoginInput']; // LoginInput!
    };
    signup: {
      // args
      data: NexusGenInputs['SignupInput']; // SignupInput!
    };
  };
  Query: {
    getDoneList: {
      // args
      userId: string; // String!
    };
    getInProgressList: {
      // args
      userId: string; // String!
    };
    getTodoList: {
      // args
      userId: string; // String!
    };
    getUserDetails: {
      // args
      userId: string; // String!
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
